<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
        <title>Reports</title>
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta name="google" value="notranslate" />
        <meta name="application-name" content="COR Reporting" />
        <meta name="description" content="COR&#39;s approach to email" />
        <meta name="application-url" content="https://www.cor-asp.ch" />
        <meta name="google" content="notranslate" />
        <!--
        <link rel="canonical" href="https://mail.google.com/mail/" />
        <link rel="shortcut icon" href="https://ssl.gstatic.com/ui/v1/icons/mail/images/favicon2.ico" type="image/x-icon" />
        <link rel="alternate" type="application/atom+xml" title="Gmail Atom Feed" href="feed/atom" />
            -->
        <script type="text/javascript">
            // <![CDATA[
            
            // ]]>
        </script>


        <style type="text/css" media="all">
            html, body {
                width: 100%;
                height: 100%;
                margin: 0px;
                padding: 0px;
            }
            
        </style>


    </head>
    <body>

        <div style="float: left; display: block; width: 300px; height: calc(100% - 2cm); background-color: hotpink; padding: 1cm; margin-right: 1cm;">hello
        
            totalWidth = contentWidth + margin + border + padding
            <br /><br />
            totalHeight = contentHeight + margin + border + padding
            <br /><br />
            When you specify a width property with CSS,
            you're only setting the contentWidth of the above equation.
            <br /><br />
            When you specify a height property with CSS,
            you're only setting the contentHeight of the above equation.
            
            <br /><br />
            This is how the W3C (i.e. the standard) box model works. 
            There are other box models you can force, using the box-sizing CSS property 
            to define how you want your box model to work, but you should use the standard box model where possible.

        </div>
        <div style="display: block; height: 300px; background-color: orange; padding: 1cm;">world
            <br /><br />
            Floats are removed from the flow and therefore elements alongside floats will almost act as if the float isn't there and margins, padding, borders and background colours will slide under the float as though the float wasn't there at all.
            <br /><br />
            The foreground content is moved out of the way by the float but margins and padding on the static content will still refer to the containing block and not the floated element.
            <br /><br />
            IE is adding the padding because you have given the element a "layout" using height. This makes the element take note of the float and applies padding from the floated element instead. You can get the same effect in other browsers by applying overflow other than visible to to #div2 (#div2{overflow:hidden}).
            <br /><br />
            Probably the easiest solution is simply to apply the margin from the floated element as that will push foreground content away.

            <br /><br />
            <a href="http://www.sitepoint.com/forums/showthread.php?573849-div-float-and-padding-left-problem-in-mozilla">Link</a>
            <br /><br /><br /><br />


            Probably the easiest solution is simply to apply the margin from the floated element as that will push foreground content away.
            Probably the easiest solution is simply to apply the margin from the floated element as that will push foreground content away.
            Probably the easiest solution is simply to apply the margin from the floated element as that will push foreground content away.
            Probably the easiest solution is simply to apply the margin from the floated element as that will push foreground content away.
            Probably the easiest solution is simply to apply the margin from the floated element as that will push foreground content away.
            Probably the easiest solution is simply to apply the margin from the floated element as that will push foreground content away.
            Probably the easiest solution is simply to apply the margin from the floated element as that will push foreground content away.
            Probably the easiest solution is simply to apply the margin from the floated element as that will push foreground content away.
            Probably the easiest solution is simply to apply the margin from the floated element as that will push foreground content away.
            Probably the easiest solution is simply to apply the margin from the floated element as that will push foreground content away.
            Probably the easiest solution is simply to apply the margin from the floated element as that will push foreground content away.
            Probably the easiest solution is simply to apply the margin from the floated element as that will push foreground content away.
            Probably the easiest solution is simply to apply the margin from the floated element as that will push foreground content away.
            Probably the easiest solution is simply to apply the margin from the floated element as that will push foreground content away.
            Probably the easiest solution is simply to apply the margin from the floated element as that will push foreground content away.
            Probably the easiest solution is simply to apply the margin from the floated element as that will push foreground content away.
            Probably the easiest solution is simply to apply the margin from the floated element as that will push foreground content away.
            Probably the easiest solution is simply to apply the margin from the floated element as that will push foreground content away.
            Probably the easiest solution is simply to apply the margin from the floated element as that will push foreground content away.
            Probably the easiest solution is simply to apply the margin from the floated element as that will push foreground content away.
            Probably the easiest solution is simply to apply the margin from the floated element as that will push foreground content away.
            Probably the easiest solution is simply to apply the margin from the floated element as that will push foreground content away.
            Probably the easiest solution is simply to apply the margin from the floated element as that will push foreground content away.
            Probably the easiest solution is simply to apply the margin from the floated element as that will push foreground content away.
            Probably the easiest solution is simply to apply the margin from the floated element as that will push foreground content away.
        </div>
        <div style="display: block; height: 300px; background-color: red; padding: 1cm;">world</div>


    </body>
</html>
